Les boucles d'instruction permettent d'effectuer des traitements récurrents pour optimiser le code
  Par exemple, si l'on souhaite appliquer un traitement sur l'ensemble des cellules d'un tableau
    On ne va pas rentrer le code pour chaque cellue 
      On va utiliser une boucle qui va passer en revu l'ensemble des cellules
        Et dans cette boucle une uniquer ligne de code 
        
I - La boucle "For Each"

Permet de passer en revu chaque cellule de la plage sélectionné

Fonctionne sur deux notions :
  1. Le groupe d'éléments 
  2. L'élément qui parcours le groupe d'élément

Avec une idée clés :
  L'élément qui parcours le groupe d'élément doit être du même type que le groupe d'élément
  
Dans notre cas, le groupe d'élément que nous parcourons est l'objet "Selection"
  C'est un objet "Range" càd de type plage de cellule
    L'objet que nous allons utiliser pour parcourir la sélection doit être déclaré et du même type, "Range"
    
Pour déclarer, nous utilisons le mot clés "Dim"

  _ Dim cellule As Range
  
Il faut ensuite écrire notre boucle tel que celle-ci aille chercher dans tout notre sélection
  Et le mot clès VBA est justement "In Selection"
    Il désigne la plage de cellule pré-sélectionnée
  
   _ For Each cellule In Selection
  
Comme tout instruction il faut la boucler 
  Le mot clés est alors "Next"
    Suivit de la variable que l'on utilise
      
      _ Next cellule
      
Les bornes de notre boucle sont donc :
  
   _ Dim cellule As Range
        ...
    Next cellule

Avec entre les deux, l'instruction du traitement que nous souhaitons appliquer à ces cellules
    
II - Application 
  
    A) Afficher toutes les valeurs dans notre tableau

La première chose qu'il faut insérer dans notre boucle, est donc le fait de mémoriser à chaque passage la valeur de la cellule dans une variable
  Après avoir définit notre variable "memoire", il faut donc lui donner comme instruction d'ajouter la valeure de la cellule tout en gardant les valeures précédentes
    Pour cela, il faut donc que cette dernière soit :
      -Egale à elle-même
      
       _ memoire = memoire
       
      -Plus la valeure de la cellule, qui est contenue dans notre variable "cellule" 
        Le mot clés est ".Value" qui désigne la valeure d'un objet de type range, càd ce que contient la cellule 
          Enfin, pour que chaque valeur soit explicitement séparer, on concatenate le tout avec un tiret
          
      _ memoire = memoire & cellule.Value & "-"
      
 On ajoute une boite de dialogue pour afficher les résultats de notre boucle, et le code completet alors:
 
****************************************************************** Code ****************************************************************************************************
Sub frequence()

Dim cellule As Range
Dim memoire As String

For Each cellule In Selection
memoire = memoire & cellule.Value & "-"
Next cellule

MsgBox (memoire)

End Sub
*****************************************************************************************************************************************************************************

    B) Calculer la fréquence d'apparition de chaque valeur
 
Cette fois-ci, nous avons besoin d'une variable qui va permettre de pouvoir compter le nombre de fois où la valeur de chaque cellule est répétée
  Que l'on va définir comme un entier court, toujours par soucis d'optimisation de Typage

  _ Dim frequence As Byte
  
Il nous faut ensuite définir deux variables afin de savoir à quelle indice de ligne (1ere Variable) et de colonne (2eme Variable)
  Le principe est que pour chaque cellule que nous parcourons dans la boucle de la comparer avec toutes les cellules du tableau
    !! Il y aura donc une deuxième boucle à l'intérieur de cette première boucle !!
    
    _ Dim ligne As Byte
      Dim colonne As Byte
  
A chaque passage, il nous faudra donc réinitialiser la valeur de notre vraible "frequence"  
  Car à chaque passage, nous allons l'incrémenter 
  
La difficulté est qu'à chaque passage, il faut être capable de comparer avec toutes les cellules du tableau de la sélection
  Il nous faut donc un deuxième objet qui permet de parcourir cette deuxième sélection
    Deuxièrement sélection qui est également une "Range", notre objet doit donc a nouveau également être de type "Range"
    
      _ Dim cellule2 As Range
      
Avant d'insérer les instructions, notre code est alors : 

  _ Dim frequence As Byte
    Dim ligne As Byte
    Dim colonne As Byte
    Dim cellule2 As Range
      
    For Each cellule In Selection
    frequence = 0
    
       For Each cellule2 In Selection
            ....
       Next cellule 2
    
    Next cellule
  
Le principe des instructions de cette deuxième boucle, est de dire que si les valeurs sont identiques, il s'agit d'un doublon
  Dans cette deuxième boucle nous parcourons a nouveau toutes les cellules du tableau
    Donc, il faut d'abord  s'assurer que la cellule à laquelle nous la comparons n'est pas elle-même  
      D'où la présence des variables "lignes" et "colonnes" 
        Que nous devons affecter à l'indice de ligne et de colonne en cours 
          Les mots clés Excel sont alors ".Row" et ".Column"
          
            _ ligne = cellule.Row
              colonne = cellule.Column
  
Il s'agit alors de s'assurer que les indices de lignes ou de colonnes sont différents  
  Avec l'instruction If
  
    _ if (ligne<>cellule2.Row or colonne <> cellule2.Column) Then
  
Si cette condition est satisfaite, on peut ensuite vérifier si les valeurs sont les mêmes
  Avec une sous-instruction IF
  
      _ if(cellule.Value = cellule2.Value) Then
          frequence = frequence + 1
  
Notre deuxième boucle cest alors : 

    _ For Each cellule2 In Selection
          If (ligne <> cellule2.Row Or colonne <> cellule2.Column) Then
              If (cellule.Value = cellule2.Value) Then
                  frequence = frequence + 1
               End If
          End If
      Next cellule2
      
A la fin de cette boucle, on a donc comparer toutes les cellules de tableaux à la cellule en cours de traitement dans la première boucle 
  Autrement dit, on a comparé toutes les "cellule2" a notre unique "cellule"
    Processus qui est ensuite itéré de par notre première boucle
    
      1. Mettre les cellules redontantes en "Bold"

Ce que l'on peut faire dans un premier temps, est déjà faire ressortir en gras les valeurs étant des doublons (ou plus)
  L'idée est que si le résultat de la deuxième boucle est 1, c'est qu'il y au moins deux fois la valeur de la cellule traitée dans le tableau
    On peut alors incorporer une condition If après cette deuxième boucle mais toujours dans notr première boucle
      
      _ If (frequence > 1) Then
          cellule.Font.Bold = True 
          
          
       2. Augmenter la taille de la police des cellules proportionellement à leur "niveau de fréquence"

Pour cela, on utiliser la propriété .size auquel on va simplement ajouter la fréquence (mutiplié par 2 pour grossir l'effet)
     
     _ If (frequence > 1) Then
          cellule.Font.Size = 11 + frequence*2


       2. Mettre une évolution de couleur 

       _ If (frequence > 1) Then
           cellule.interior.Color = RBG(255 - frequence * 3, 0 ,0)
       

****************************************************************** Code finale **********************************************************************************************
Sub frequence()

Dim cellule As Range
Dim ligne As Byte
Dim colonne As Byte
Dim frequence As Byte
Dim cellule2 As Range

For Each cellule In Selection
frequence = 0
ligne = cellule.Row
colonne = cellule.Column

    For Each cellule2 In Selection
        If (ligne <> cellule2.Row Or colonne <> cellule2.Column) Then
            If (cellule.Value = cellule2.Value) Then
                frequence = frequence + 1
             End If
        End If
    Next cellule2
    
        If (frequence > 0) Then
            cellule.Font.Bold = True
            cellule.Interior.Color = RGB(255 - frequence * 40, 200, 200)
                    Else
            cellule.Font.Bold = False
        End If
        
Next cellule

End Sub
*****************************************************************************************************************************************************************************
